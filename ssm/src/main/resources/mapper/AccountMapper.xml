<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.domain.AccountMapper">
  <resultMap id="BaseResultMap" type="com.demo.domain.Account">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="VARCHAR" property="userid" />
    <result column="num" jdbcType="INTEGER" property="num" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userid, num
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.demo.domain.Account">
    insert into account (id, userid, num
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.demo.domain.Account">
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="num != null">
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.domain.Account">
    update account
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.domain.Account">
    update account
    set userid = #{userid,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="conditions">
    <trim prefix="where" prefixOverrides="and|or">
      1=1
      <if test="id!=null">
        and  t.id = #{id}
      </if>
      <if test="userid!=null">
        and  t.userid = #{userid}
      </if>
      <if test="num!=null">
        and  t.num = #{num}
      </if>
    </trim>
  </sql>
  <sql id="sets">
    <trim prefix="SET" suffixOverrides=",">
      <if test="userid!=null">
        t.userid = #{userid},
      </if>
      <if test="num!=null">
        t.num = #{num},
      </if>
    </trim>
  </sql>
  <select id="getAll" resultMap="BaseResultMap">
    select * from account
  </select>
  <delete id="deleteByIds">
     delete from account  t where t.id in (#{ids})
  </delete>
  <select id="get" parameterType="java.util.Map" resultMap="BaseResultMap">
    select *  from account t
    <include refid="conditions"/>
  </select>
  <select id="getCount" parameterType="java.util.Map" resultType="java.lang.Long">
     select count(*) from account t
    <include refid="conditions"/>
  </select>
  <insert id="saveBatch" parameterType="java.util.List">
    insert into account(userid,num,)
    <foreach collection="list" index="index" item="item" separator="UNION ALL">
      SELECT
      #{item.userid,jdbcType=VARCHAR},#{item.num,jdbcType=INTEGER},
      from dual
    </foreach>
  </insert>
  <select id="page" parameterType="java.util.Map" resultMap="BaseResultMap">
    select * from account t
    <include refid="conditions"/>
    <if test="orders!=null">
      order by
      <foreach collection="orders" index="index" item="item" separator=",">
        t.${item}
      </foreach>
      <if test="orderType!=null">
         ${orderType}
      </if>
    </if>
    LIMIT #{startPage},#{endPage}
  </select>
</mapper>